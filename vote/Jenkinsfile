pipeline {
  agent {
      docker {
          image 'python:2.7.16-slim'
      }
  }

  stages{
    stage("build"){
      when {
      changeset "**/vote/**"
      }
      steps{
        echo 'Compiling vote app..'
        dir('vote'){
          sh 'pip install'
          args '-i requirements.txt'
        }
      }
  }

  stage("test"){
    when {
    changeset "**/vote/**"
    }
    steps{
        echo 'Running Unit Tets on vote app..'
        dir('vote'){
        sh 'nose tests -v'
      }
    }
  }

  stage("package"){
    when {
    branch 'master'
    changeset "**/vote/**"
    }
    steps{
        echo 'Packaging vote app'
        dir('vote'){
        sh 'mvn package -DskipTests'
        archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
      }
    }
  }
  }

  post{
    always{
    echo 'Building multibranch pipeline for vote is completed..'
    }
    failure {
      slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "instavote-cd", message: "Build Success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}
